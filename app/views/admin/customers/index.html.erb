
<p id="notice"><%= notice %></p>
 <form class="border rounded bg-white form-time-table">
  <h1 class="d-flex justify-content-center">全出荷者リスト</h1>
<%= link_to "",admin_customers_path(month:@month.prev_month), class: "fas fa-angle-double-left fa-2x" %>
<strong>
<%= @month.strftime('%Y/%m') %>
</strong>
<%= link_to "",admin_customers_path(month:@month.next_month), class: "fas fa-angle-double-right fa-2x" %>

<!--<div class="vertical-scroll-table">-->
<table class="table-to-export table-bordered" style="width: -webkit-fill-available;" data-sheet-name="野菜出荷データ">
    <thead>
      <tr class="bg-light">
        <th scope="col"></th>
        <th scope="col">名前</th>
        <th scope="col">品目</th>
        <th scope="col">出荷日時</th>
        <th scope="col">出荷先</th>
        <th scope="col">コメント</th>
        <th scope="col">数量</th>
        <th scope="col">規格</th>
        <th scope="col">画像</th>

      </tr>
    </thead>

    <tbody>
      <% @items.each do |item| %>
        <tr>
          <td><input type="checkbox"></td>
          <td><%= item.customer.name %></td>
          <td><%= item.name %></td>
          <td><%= item.date.strftime('%Y/%m/%d')%></td>
          <td><%= item.send_method %></td>
          <td><%= item.comment %></td>
          <td><%= item.count %></td>
          <td><%= item.standard %></td>
          <td><%= attachment_image_tag(item, :image, :fill, 100, 100, fallback: "no-image-icon.jpg") %></td>

        </tr>
      <% end %>
    </tbody>
  </table>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.9.10/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.3/FileSaver.min.js"></script>


<hr>
<div class="d3">
  <h3>出荷量順グラフ</h3>
  <svg width="600" height="240" style="background:#f8f8f8";>  
</div>
<%= @customer_data %>
</svg>

<script src="https://d3js.org/d3.v7.min.js"></script>
<script>
  (function(){
    'use strict';

    var WIDTH = 600;
    var HEIGHT = 240;
    
    var padding = {
      top: 40,
      bottom: 40,
      left: 100,
      right: 40,
    };


    var scores = [
      {name: 'tagushi', score: 77},
      {name: 'kame', score: 92},
      {name: 'nishi', score: 66},
      {name: 'nori', score: 55},
      {name: 'aii', score: 42},
      {name: 'koshi', score: 20}
      ];

    function update(data) {
      var bars = d3.select('svg').selectAll('rect').data(data);

      var xScale = d3.scaleLinear()
      .domain([0, d3.max(scores, function(d){
        return d.score;
      })])
      .range([0, WIDTH - padding.left - padding.right])
      .nice();
     
      var yScale = d3.scaleBand()
      .domain(scores.map(function(d){
        return d.name;
      }))
      .range([0, HEIGHT - padding.top - padding.bottom])
      .padding([0.1]);
      
      var color = d3.scaleOrdinal(d3.schemeCategory10);
      
      bars
        .enter()
        .append('rect')
        .merge(bars)
        .attr('x', padding.left)
        .attr('y',function(d,i){
          return yScale(d.name) + padding.top;
        })
        .attr('width', 0)
        .attr('height',yScale.bandwidth())
        .attr('fill', function(d, i){
          return color(i);
        })
        .transition()
          .duration(200)
          .delay(function(d, i){
            return i * 200;
          })
          .ease(d3.easePoly, d3.easePolyInOut)
          .attr('width', function(d){
            return xScale(d.score);
          });
        

      bars
        .exit()
        .remove();
        
        
      d3.select('svg')
        .append('g')
        .attr(
          'transform',
          'translate(' + [padding.left , HEIGHT - padding.bottom] +')'
          )
        .call(d3.axisBottom(xScale));
    
      d3.select('svg')
        .append('g')
        .attr(
          'transform',
          'translate(' + [padding.left, padding.top] +')'
          )
        .call(d3.axisLeft(yScale));
    }

    update(scores);


  })();
</script>



<hr>

<div>
  <canvas id="stage"></canvas>
</div>

<script>
  //「月別データ」
var mydata = {
  labels: ["１月", "２月", "３月", "４月", "５月", "６月", "７月"],
  datasets: [
    {
      label: '数量',
      hoverBackgroundColor: "rgba(255,99,132,0.3)",
      data: [65, 59, 80, 81, 56, 55, 48],
    }
  ]
};

//「オプション設定」
var options = {
  title: {
    display: true,
    text: 'サンプルチャート'
  }
};

var canvas = document.getElementById('stage');
var chart = new Chart(canvas, {

  type: 'bar',  //グラフの種類
  data: mydata,  //表示するデータ
  options: options  //オプション設定

});
</script>